{
  "tasks": [
    {
      "type": "shell",
      "label": "C/C++: g++ build active file",
      //"command": "/usr/bin/cpp",                  //不能用这命名, 否则你可能会i报错 gdb failed with message 'file format not recognized'
      "command": "/usr/bin/g++",
      "args": [
        "-fdiagnostics-color=always",
        "-g",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}.out"
        // "`pkg-config","--libs","--cflags","opencv4`"	//这是添加第三方库代码，要添加什么库直接继续加就行，不要忘记了 ` 符号
        //如下面再加个 gazebo11 第三方库(你得保证你安装的第三方库中含有.pc文件)
        // "`pkg-config","--libs","--cflags","opencv4,gazebo11`"
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "调试器生成的任务。"
    },
    {
      "type": "shell",
      "label": "Clang++: 编译单文件",
      // 编译器路径
      "command": "clang++",
      // 编译器后附的参数，反映在终端里即"clang+ arg1 arg2 arg3..."
      "args": [
        // 编译的文件
        "${fileDirname}\\${fileBasenameNoExtension}.cpp",
        // 生成文件到 build 文件夹中，文件名为debug
        "-o",
        "${workspaceFolder}\\build\\test",
        // 启用调试(debug)
        "-g",
        "`pkg-config",
        "--libs",
        "--cflags",
        "opencv4,opengl,openssl,openvr,openmp,zlib,vulkan,tbb,sqlite3,petsc,numa,mpfr,mkl-dynamic-ilp64-gomp,lua-5.3-c++,lapack,lapack-netlib,jansson,hdf5,hdf5-mpi,gmp,glu,gnutls,glew,glfw3,fftw3,egl,cublas-11`",
        // 启用诊断
        "-pedantic",
        "-Wall",
        "-Wextra",
        // 多线程支持
        "-pthread",
        // 使用 LLVM lld 链接器而不是默认链接器
        "-fuse-ld=lld",
        // 检查内存越界和资源泄露
        "-fsanitize=address",
        "-fsanitize=undefined",
        // 分析所有注释(这其实只需告诉 Clangd ，即添加到 compile_commands.json 中)
        // Clang 默认只分析 Doxygen 风格("/**", "///"开头)的注释
        // "-fparse-all-comments",
        // 设置 C++ 的标准库为 libc++: Clang 对应的标准库
        "-stdlib=libc++",
        // 设置 C++ 版本为 c++17
        "-std=c++17",
        // 为给定环境生成代码
        "--target=x86_64-linux",
        "-I/opt/paraviewopenfoam510/include",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtWebengine",
        "-I/opt/Qt/5.15.2/gcc_64/include",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtCore",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtGui",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtSql",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtWebengine",
        "-I/opt/Qt/5.15.2/gcc_64/include/Qt3DCore",
        "-I/opt/hdf5/include",
        "-I/opt/eigen/include",
        "-I/opt/ffmpeg/include",
        "-I/opencv4/include",
        "-I/opt/netcdf-c/4.9.2/include",
        "-I/opt/jsoncpp/include",
        "-I/opt/utf8cpp/include",
        "-I/opt/nlohmannjson/include",
        "-I/opt/tensorflow/include",
        "-I/opt/vtk/vtk-9.2.6.data/headers",
        "-I/opt/zstd/include",
        "-I/opt/hypre/include",
        "-I/opt/trilinos/include",
        "-I/opt/boost/include",
        "-I/opt/pestc/include",
        "-I/opt/zlib/1.2.13/include",
        "-I/opt/p4est/include",
        "-I/opt/openblas/include",
        "-I/opt/lammps/include",
        "-I/opt/lapack/include",
        "-I/opt/curl/include",
        "-I/opt/deal_II/include",
        "-I/opt/protobuf/include",
        "-I/opt/pnetcdf/include",
        "-I/opt/freeglut3/include",
        "-I/opt/ctemplate/include",
        "-I/opt/cpp-httplib/include"
      ],
      "options": {
        // Clang 的启动路径
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档，即使设为never，手动点进去还是可以看到
        "reveal": "always",
        // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
        "focus": false,
        // 不同的文件的编译信息共享一个终端面板
        "panel": "shared"
      },
      "detail": "Clang++: 编译单个文件"
    },
    {
      "type": "shell",
      "label": "Clang++: 编译多文件",
      "command": "clang++",
      "args": [
        "${fileDirname}\\*.cpp",
        "-o",
        "${workspaceFolder}\\build\\test",
        "-g",
        "`pkg-config",
        "--libs",
        "--cflags",
        "opencv4,opengl,openssl,openvr,openmp,zlib,vulkan,tbb,sqlite3,petsc,numa,mpfr,mkl-dynamic-ilp64-gomp,lua-5.3-c++,lapack,lapack-netlib,jansson,hdf5,hdf5-mpi,gmp,glu,gnutls,glew,glfw3,fftw3,egl,cublas-11`",
        "-pedantic",
        "-Wall",
        "-Wextra",
        "-pthread",
        "-fuse-ld=lld",
        "-fsanitize=address",
        "-fsanitize=undefined",
        "-stdlib=libc++",
        "-std=c++17",
        "--target=x86_64-linux",
        "-I/opt/paraviewopenfoam510/include",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtWebengine",
        "-I/opt/Qt/5.15.2/gcc_64/include",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtCore",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtGui",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtSql",
        "-I/opt/Qt/5.15.2/gcc_64/include/QtWebengine",
        "-I/opt/Qt/5.15.2/gcc_64/include/Qt3DCore",
        "-I/opt/hdf5/include",
        "-I/opt/eigen/include",
        "-I/opt/ffmpeg/include",
        "-I/opencv4/include",
        "-I/opt/netcdf-c/4.9.2/include",
        "-I/opt/jsoncpp/include",
        "-I/opt/utf8cpp/include",
        "-I/opt/nlohmannjson/include",
        "-I/opt/tensorflow/2.13.1/include",
        "-I/opt/vtk/vtk-9.2.6.data/headers",
        "-I/opt/zstd/include",
        "-I/opt/hypre/include",
        "-I/opt/trilinos/include",
        "-I/opt/boost/include",
        "-I/opt/pestc/include",
        "-I/opt/zlib/1.2.13/include",
        "-I/opt/p4est/include",
        "-I/opt/openblas/include",
        "-I/opt/lammps/include",
        "-I/opt/lapack/include",
        "-I/opt/curl/include",
        "-I/opt/deal_II/include",
        "-I/opt/protobuf/include",
        "-I/opt/pnetcdf/include",
        "-I/opt/freeglut3/include",
        "-I/opt/ctemplate/include",
        "-I/opt/cpp-httplib/include",
        "-L/opt/protobuf/lib",
        "-L/opt/openblas/lib",
        "-L/opt/boost/lib",
        "-L/opt/ffmpeg/lib",
        "-L/opt/ctemplate/lib",
        "-L/opt/hypre/lib",
        "-L/opt/netcdf-c/lib",
        "-L/opt/p4est/lib",
        "-L/opt/utf8cpp/lib",
        "-L/opt/trilinos/lib",
        "-L/opt/nlohmannjson/lib",
        "-L/opt/paraviewopenfoam510/lib",
        "-L/opt/deal_II/lib",
        "-L/opt/jsoncpp/lib",
        "-L/opt/tensorflow/2.13.1/lib"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Clang++: 编译当前文件所在目录里所有文件"
    }
  ],
  "version": "2.0.0"
}
